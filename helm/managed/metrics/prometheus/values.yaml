# Default values for a Kubernetes Prometheus Stack instance which can process HPCC component metrics.

##The kube-prometheus-stack sub-components can be customized by modifying helm chart values here.
kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      ## AdditionalScrapeConfigs allows specifying additional Prometheus scrape configurations. Scrape configurations
      ## are appended to the configurations generated by the Prometheus Operator. Job configurations must have the form
      ## as specified in the official Prometheus documentation:
      ## https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config. As scrape configs are
      ## appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility
      ## to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible
      ## scrape configs are going to break Prometheus after the upgrade.
      additionalScrapeConfigs:
      ## Instructs Prometheus to poll all pods for metrics service on the service port
      - job_name: 'hpcc-per-pod-metrics'
        scrape_interval: 5s
        metrics_path: /metrics
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
        - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
          action: keep
          regex: true
        - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
          action: replace
          regex: ([^:]+)(:\d+)?;(\d+)
          replacement: ${1}:${3}
          target_label: __address__
        - source_labels: [ __meta_kubernetes_pod_container_name ]
          regex: (.+)
          replacement: ${1}
          target_label: containername
  prometheus-node-exporter:
    hostRootFsMount: false #https://github.com/prometheus-community/helm-charts/issues/467
  alertmanager:
    enabled: false
  grafana:
    enabled: true
  kubeApiServer:
    enabled: true
  kubelet:
    enabled: true
  kubeControllerManager:
    enabled: true
  coreDns:
    enabled: true
  kubeDns:
    enabled: false
  kubeEtcd:
    enabled: true
  kubeScheduler:
    enabled: true
  kubeProxy:
    enabled: true
  kubeStateMetrics:
    enabled: true
  nodeExporter:
    enabled: true
  prometheusOperator:
    enabled: true
