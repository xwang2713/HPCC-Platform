{{/*
roxie configmap
Pass in dict with root and me
*/}}
{{- define "hpcc.roxieConfigMap" -}}
apiVersion: v1
metadata:
  name: {{ .me.name }}-configmap
data:
  {{ .me.name }}.yaml: |
    version: 1.0
    roxie:
{{ toYaml ( omit .me "logging") | indent 6 }}
      numChannels: {{ .numChannels }}
      topologyServers: "{{ .toponame }}:{{ .topoport }}"
      resolveLocally: false
{{- include "hpcc.generateLoggingConfig" (dict "root" .root "me" .me) | indent 6 }}
{{ include "hpcc.generateVaultConfig" (dict "root" .root "categories" (list "storage" "ecl" "ecl-user" ) ) | indent 6 }}
    global:
{{ include "hpcc.generateGlobalConfigMap" .root | indent 6 }}
{{- end -}}

{{ range $roxie := $.Values.roxie -}}
{{- if not $roxie.disabled -}}
{{- $commonCtx := dict "root" $ "me" $roxie }}
{{- $_ := set $commonCtx "toponame" (printf "%s-toposerver" $roxie.name) -}}
{{- $_ := set $commonCtx "numChannels" ($roxie.numChannels | int | default 1) -}}
{{- $_ := set $commonCtx "topoport" ($roxie.topoport | int | default 9004) -}}
{{- $configSHA := include "hpcc.roxieConfigMap" $commonCtx | sha256sum }}
{{- include "hpcc.checkDefaultStoragePlane" $commonCtx }}
{{- if not $roxie.localAgent -}}
{{- $_ := set $roxie "localAgent" false -}}
{{- $servername := printf "%s-server" $roxie.name -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $commonCtx.toponame | quote }}
spec:
  replicas: {{ $roxie.topoReplicas | default 1 }}
  selector:
    matchLabels:
      run: {{ $commonCtx.toponame | quote }}
  template:
    metadata:
      labels:
        run: {{ $commonCtx.toponame | quote }}
        roxie-cluster: {{ $roxie.name | quote }}
      annotations:
        checksum/config: {{ $configSHA }}
    spec:
      serviceAccountName: "hpcc-default"
      containers:
      - name: {{ $commonCtx.toponame | quote }}
{{ include "hpcc.addSentinelProbes" $roxie | indent 8 }}
{{- include "hpcc.addSecurityContext" $commonCtx | indent 8 }}
{{- if not $.Values.global.privileged }}
{{- include "hpcc.addStubResources" . | indent 8 }}
{{- end }}
{{ include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        workingDir: /var/lib/HPCCSystems
        command: [ toposerver ] 
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" . | indent 8 }}
      volumes:
{{ include "hpcc.addConfigMapVolume" . | indent 6 }}
---

{{- range $service := $roxie.services }}
{{- if ne (int $service.port)  0 }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $service.name | quote }}
  labels:
    type: roxie-service
spec:
  ports:
  - port: {{ $service.port }}
    protocol: TCP
    targetPort: {{ $service.port }}
  selector:
    roxie-server: {{ $servername | quote }}
  type: {{ if $service.external -}} LoadBalancer {{- else -}} ClusterIP {{- end }}
{{- end }}
{{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ $commonCtx.toponame | quote }}
spec:
  ports:
  - port: {{ $commonCtx.topoport  }}
    protocol: TCP
    targetPort: {{ $commonCtx.topoport }}
  selector:
    run: {{ $commonCtx.toponame | quote }}
  clusterIP: None # Headless service

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ $roxie.name | quote }}
spec:
  podSelector:
    matchLabels:
      roxie-cluster: {{ $roxie.name | quote }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          roxie-cluster: {{ $roxie.name | quote }}
  egress:
  - to:
    - podSelector:
        matchLabels:
          roxie-cluster: {{ $roxie.name | quote }}

---
kind: ConfigMap 
{{ include "hpcc.roxieConfigMap" $commonCtx }}
---

{{ if $roxie.serverReplicas -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $servername | quote }}
spec:
  replicas: {{ $roxie.serverReplicas }}
  selector:
    matchLabels:
      run: {{ $servername | quote }}
  template:
    metadata:
      labels:
        run: {{ $servername | quote }}
        roxie-server: {{ $servername | quote }}
        roxie-cluster: {{ $roxie.name | quote }}
        accessDali: "yes"
        accessEsp: "yes"
      annotations:
        checksum/config: {{ $configSHA }}
    spec:
      serviceAccountName: "hpcc-default"
      initContainers:
        {{- include "hpcc.checkDataMount" (dict "root" $) | indent 6 }}
      containers:
      - name: {{ $servername | quote }}
        workingDir: /var/lib/HPCCSystems
        command: [ roxie ] 
        args: [
                {{ include "hpcc.configArg" . }},
                {{ include "hpcc.daliArg" $ }},
                "--server=true" 
              ]
{{- $local := dict "first" true }}
{{- range $service := $roxie.services }}
{{- if ne (int $service.port)  0 }}
{{- if $local.first }}
{{- $_ := set $local "first" false }}
        ports:
{{- end }}
        - name: {{ $service.name }}
          containerPort: {{ $service.port }}
{{- end }}
{{- end }}
{{ include "hpcc.addSentinelProbes" $roxie | indent 8 }}
{{ include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 8 }}
{{- include "hpcc.addResources" (dict "me" $roxie.serverResources) | indent 8 }}
{{ include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" $roxie | indent 8 }}
{{ include "hpcc.addDataVolumeMount" $commonCtx | indent 8 }}
{{ include "hpcc.addDllVolumeMount" $commonCtx | indent 8 }}
{{ include "hpcc.addSecretVolumeMounts" (dict "root" $ "categories" (list "system" "ecl" "storage" ) ) | indent 8 }}
      volumes:
{{ include "hpcc.addConfigMapVolume" $roxie | indent 6 }}
{{ include "hpcc.addDataVolume" $commonCtx | indent 6 }}
{{ include "hpcc.addDllVolume" $commonCtx | indent 6 }}
{{ include "hpcc.addSecretVolumes" (dict "root" $ "categories" (list "system" "ecl" "storage" ) ) | indent 6 }}
---

{{ end -}}
{{ range $c, $e := until ($commonCtx.numChannels|int) -}}
{{- $channel := add $c 1 -}}
{{- $name := printf "%s-agent-%d" $roxie.name $channel -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name | quote}}
spec:
  replicas: {{ $roxie.replicas | default 1 }}
  selector:
    matchLabels:
      run: {{ $name | quote}}
  template:
    metadata:
      labels:
        run: {{ $name | quote}}
{{- if not $roxie.serverReplicas }}        
        roxie-server: {{ $servername | quote }}
{{- end }}
        roxie-cluster: {{ $roxie.name | quote }}
        accessDali: "yes"
        accessEsp: "yes"
      annotations:
        checksum/config: {{ $configSHA }}
    spec:
      serviceAccountName: "hpcc-default"
      initContainers:
        {{- include "hpcc.checkDataMount" (dict "root" $) | indent 6 }}
      containers:
      - name: {{ $name | quote}}
        workingDir: /var/lib/HPCCSystems
        command: [ roxie ]
        args: [ 
                {{ include "hpcc.configArg" $roxie }},
                {{ include "hpcc.daliArg" $ }},
                "--channels={{ $channel }}", 
                "--server={{ not $roxie.serverReplicas }}",
              ]
{{- if not $roxie.serverReplicas }}
{{- $local := dict "first" true }}
{{- range $service := $roxie.services }}
{{- if ne (int $service.port)  0 }}
{{- if $local.first }}
{{- $_ := set $local "first" false }}
        ports:
{{- end }}
        - name: {{ $service.name }}
          containerPort: {{ $service.port }}
{{- end }}
{{- end }}
{{ include "hpcc.addSentinelProbes" $roxie | indent 8 }}
{{- end }}
{{ include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 8 }}
{{- include "hpcc.addResources" (dict "me" $roxie.channelResources) | indent 8 }}
{{ include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" $roxie | indent 8 }}
{{ include "hpcc.addDataVolumeMount" $commonCtx | indent 8 }}
{{ include "hpcc.addDllVolumeMount" $commonCtx | indent 8 }}
{{ include "hpcc.addSecretVolumeMounts" (dict "root" $ "categories" (list "system" "ecl" "storage" ) ) | indent 8 }}
      volumes:
{{ include "hpcc.addConfigMapVolume" $roxie | indent 6 }}
{{ include "hpcc.addDataVolume" $commonCtx | indent 6 }}
{{ include "hpcc.addDllVolume" $commonCtx | indent 6 }}
{{ include "hpcc.addSecretVolumes" (dict "root" $ "categories" (list "system" "ecl" "storage" ) ) | indent 6 }}

---

{{- end }}
{{- end }}
{{- end }}
{{- end }}
 
