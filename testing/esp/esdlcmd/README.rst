esdlcmd Regression Script
=========================

Runs esdl tool commands with known inputs to compare results to known correct key results. It currently supports testing the commands:

- xsd
- wsdl
- java
- cpp

Test Contents
--------------

testing/esp/esdlcmd/esdlcmd-test.py
  Python3 script that runs the Test Cases and reports on failure or success. It creates a directory to hold the Test Case results. By default the output directory is named *esdlcmd-test-output* and is created in the current working directory. Its location can be specified with the ``-o`` command-line option. Run the script with the --help option to see all the usage details.

testing/esp/esdlcmd/inputs
  Contains esdl definitions used as inputs for the test cases. These inputs are used to exercise the esdl commands, for example to generate xsd, wsdl or c++ output.

testing/esp/esdlcmd/key
    Contains output generated by the esdl tool that is known to be correct. It is used as a *key* or baseline for comparison with the tool's output during a Test Case run.

Each entry in the key directory must match the name of Test Case it is for. For example, the Test Case named ``wsdl1`` to generate the wsdl for WsTest, has a file named ``wsdl1.wsdl`` in the key directory. Likewise, the Test Case named ``wstest-cpp-installdir`` that generates c++ files for the WsDfu service has a folder named ``wstest-cpp-installdir`` in the key directory.

Updating Test Cases
-------------------

If a change is made to the platform code that changes the output of the esdl tool, then the corresponding Test Cases that cover that esdl command must be updated. In practice this means:

1. Manually running the esdl command with the input from the test case.
2. Verifying by hand that the changed output is correct.
3. Updating the key in the testing/esp/esdlcmd/key directory with the new output. Note that the name of the updated key must match the name of the Test Case that generates that output. Some commands like ``wsdl`` generate a single file of output, and others like ``cpp`` generate a directory of output.
4. Commit the changes to the testing/esp/esdlcmd project.
